p + geom_polygon(color = "gray30", size = 0.01) + coord_map(projection = "albers", lat0 = 39, lat1 = 45) + scale_fill_nord("aurora", discrete = F)
p + geom_polygon(color = "gray90", size = 0.01) + coord_map(projection = "albers", lat0 = 39, lat1 = 45) + scale_fill_nord("aurora", discrete = F)
p + geom_polygon(color = "gray90", size = 0.01) + coord_map(projection = "albers", lat0 = 39, lat1 = 45) + scale_fill_nord("aurora", discrete = F) + theme
p + geom_polygon(color = "gray90", size = 0.01) + coord_map(projection = "albers", lat0 = 39, lat1 = 45) + scale_fill_nord("aurora", discrete = F) + theme_classic()
p + geom_polygon(color = "gray90", size = 0.01) + coord_map(projection = "albers", lat0 = 39, lat1 = 45) + scale_fill_nord("polar", discrete = F) + theme_classic()
p + geom_polygon(color = "gray90", size = 0.01) + coord_map(projection = "albers", lat0 = 39, lat1 = 45) + scale_fill_nord("polarnight", discrete = F) + theme_classic()
ggplot(data = dog_map,
aes(x = long, y = lat,
group = group, fill = imported)) + geom_polygon(color = "gray90", size = 0.01) + coord_map(projection = "albers", lat0 = 39, lat1 = 45) + scale_fill_nord("polarnight", discrete = F) + theme_classic()
ggplot(data = dog_map,
aes(x = long, y = lat,
group = group, fill = imported)) + geom_polygon(color = "gray90", size = 0.01) + coord_map(projection = "albers", lat0 = 39, lat1 = 45) + scale_fill_nord("lumina", discrete = F) + theme_classic()
ggplot(data = dog_map,
aes(x = long, y = lat,
group = group, fill = imported)) + geom_polygon(color = "gray90", size = 0.01) + coord_map(projection = "albers", lat0 = 39, lat1 = 45) + scale_fill_nord("frost", discrete = F) + theme_classic()
p + geom_polygon(color = "gray90", size = 0.01) + coord_map(projection = "albers", lat0 = 39, lat1 = 45) + scale_fill_nord("frost", discrete = F) + theme_classic()
p + geom_polygon(color = "gray90", size = 0.01) + coord_map(projection = "albers", lat0 = 39, lat1 = 45) + scale_fill_nord("halifax_harbor", discrete = F) + theme_classic()
p + geom_polygon(color = "gray90", size = 0.01) + coord_map(projection = "albers", lat0 = 39, lat1 = 45) + scale_fill_nord("halifax_harbor", discrete = F, reverse = T) + theme_classic()
p + geom_polygon(color = "gray90", size = 0.01) + coord_map(projection = "albers", lat0 = 39, lat1 = 45) + scale_fill_nord("halifax_harbor", discrete = F, reverse = TRUE) + theme_classic()
knitr::opts_chunk$set(echo = TRUE)
library(caret)
install.packages("caret")
library(rsample)
library(tidytuesdayR)
house <- data(BostonHousing)
house <- data(BostonHousing)
data("BostonHousing")
data(longley)
house <- data(longley)
head(iris)
ggplot(iris, aes(x = Species)) + geom_hist()
library(tidyverse)
ggplot(iris, aes(x = Species)) + geom_hist()
ggplot(iris, aes(x = Species)) + geom_histogram()
ggplot(iris, aes(x = Species)) + geom_histogram(stat = "count")
head(iris)
ggplot(iris, aes(x = Species, y = Sepal.Length)) + geom_line(color = Species)
head(iris)
head(iris)
ggplot(iris, aes(x = Species, y = Sepal.Length, colour = Species)) + geom_line()
ggplot(iris, aes(x = Species, y = Sepal.Length, colour = Species)) + geom_point()
ggplot(iris, aes(x = Species, y = Sepal.Length)) + geom_boxplot()
ggplot(iris, aes(x = Species, y = Sepal.Width)) + geom_boxplot()
iris_split <- iris %>% initial_split(prop = 0.8, strata = Species)
iris_split
iris_train <- training(iris_split)
iris_test <- testing(iris_split)
quantile(iris$Sepal.Length)
quantile(iris$Sepal.Length) %>% pull()
as.vector(quantile(iris$Sepal.Length))
install.packages("learnr")
shiny::runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
theme_nord <- shinyDashboardThemeDIY(
### general
appFontFamily = "Arial"
,appFontColor = "#D8DEE9"
,primaryFontColor = "#D8DEE9"
,infoFontColor = "#D8DEE9"
,successFontColor = "#D8DEE9"
,warningFontColor = "#D8DEE9"
,dangerFontColor = "#D8DEE9"
,bodyBackColor = "#2E3440"
### header
,logoBackColor = "#3B4252"
,headerButtonBackColor = "#3B4252"
,headerButtonIconColor = "#4C566A"
,headerButtonBackColorHover = "#3B4252"
,headerButtonIconColorHover = "#81A1C1"
,headerBackColor = "#3B4252"
,sidebarShadowRadius = ""
,sidebarShadowColor = "0px 0px 0px"
### sidebar
,sidebarBackColor = "#3B4252"
,sidebarPadding = 0
,sidebarMenuBackColor = "transparent"
,sidebarMenuPadding = 0
,sidebarMenuBorderRadius = 0
,sidebarShadowRadius = ""
,sidebarShadowColor = "0px 0px 0px"
,sidebarUserTextColor = "#D8DEE9"
,sidebarSearchBackColor = "#D8DEE9"
,sidebarSearchIconColor = "rgb(153,153,153)"
,sidebarSearchBorderColor = "#4C566A"
,sidebarTabTextColor = "#ECEFF4"
,sidebarTabTextSize = 13
,sidebarTabBorderStyle = "none none solid none"
,sidebarTabBorderColor = "#5E81AC"
,sidebarTabBorderWidth = 1
,sidebarTabBackColorSelected = "#81A1C1"
,sidebarTabTextColorSelected = "rgb(0,0,0)"
,sidebarTabRadiusSelected = "0px 20px 20px 0px"
,sidebarTabBackColorHover = "#D8DEE9"
,sidebarTabTextColorHover = "#2E3440"
,sidebarTabBorderStyleHover = "none none solid none"
,sidebarTabBorderColorHover = "#5E81AC"
,sidebarTabBorderWidthHover = 1
,sidebarTabRadiusHover = "0px 20px 20px 0px"
### boxes
,boxBackColor = "#4C566A"
,boxBorderRadius = 5
,boxShadowSize = "0px 1px 1px"
,boxShadowColor = "rgba(0,0,0,.1)"
,boxTitleSize = 16
,boxDefaultColor = "#4C566A"
,boxPrimaryColor = "#88C0D0"
,boxInfoColor = "#D8DEE9"
,boxSuccessColor = "#A3BE8C"
,boxWarningColor = "#B48EAD"
,boxDangerColor = "#BF616A"
,tabBoxTabColor = "#ECEFF4"
,tabBoxTabTextSize = 14
,tabBoxTabTextColor = "rgb(0,0,0)"
,tabBoxTabTextColorSelected = "rgb(0,0,0)"
,tabBoxBackColor = "#ECEFF4"
,tabBoxHighlightColor = "#88C0D0"
,tabBoxBorderRadius = 5
### inputs
,buttonBackColor = "#ECEFF4"
,buttonTextColor = "#ECEFF4"
,buttonBorderColor = "rgb(200,200,200)"
,buttonBorderRadius = 5
,buttonBackColorHover = "#D8DEE9"
,buttonTextColorHover = "rgb(100,100,100)"
,buttonBorderColorHover = "rgb(200,200,200)"
,textboxBackColor = "#ECEFF4"
,textboxBorderColor = "rgb(200,200,200)"
,textboxBorderRadius = 5
,textboxBackColorSelect = "#ECEFF4"
,textboxBorderColorSelect = "rgb(200,200,200)"
### tables
,tableBackColor = "#ECEFF4"
,tableBorderColor = "#E5E9F0"
,tableBorderTopSize = 1
,tableBorderRowSize = 1
)
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
head(us)
us <- covid19(country = "US", level = 2, raw = TRUE)
head(us)
tail(us)
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
us %>%
filter(str_detect(administrative_area_level_2, "Hawaii")) %>%
ungroup()
us %>%
filter(str_detect(administrative_area_level_2, "Hawaii")) %>%
ungroup() %>%
select(date, recovered, deaths) %>%
ggplot(aes(x = date, y = recovered)) +
geom_line(color = "blue") +
geom_line(aes(x = date, y = deaths), color = "red")
us %>%
filter(str_detect(administrative_area_level_2, "Hawaii")) %>%
ungroup() %>%
summarise(tests = sum(tests),
pos = sum(confirmed),
neg = tests - pos,
p.pos = pos/tests,
p.neg = neg/tests)
us %>%
filter(str_detect(administrative_area_level_2, "Hawaii")) %>%
ungroup() %>%
summarise(tests = sum(tests),
pos = sum(confirmed),
neg = tests - pos,
p.pos = pos/tests,
p.neg = neg/tests) %>%
pivot_longer(cols = c(p.pos, p.neg))
us %>%
filter(str_detect(administrative_area_level_2, "Hawaii")) %>%
ungroup() %>%
summarise(tests = sum(tests),
pos = sum(confirmed),
neg = tests - pos,
p.pos = pos/tests,
p.neg = neg/tests) %>%
pivot_longer(cols = c(p.pos, p.neg)) %>%
ggplot(aes(fill = name, ymax = 1, ymin = 0, xmax = 2, xmin = 1)) +
geom_rect() +
coord_polar(theta = "y",start=-pi/2) + xlim(c(0, 2)) + ylim(c(0,2))
us %>%
filter(str_detect(administrative_area_level_2, "Mississippi")) %>%
ungroup() %>%
summarise(tests = sum(tests),
pos = sum(confirmed),
neg = tests - pos,
p.pos = pos/tests,
p.neg = neg/tests) %>%
pivot_longer(cols = c(p.pos, p.neg)) %>%
ggplot(aes(fill = name, ymax = 1, ymin = 0, xmax = 2, xmin = 1)) +
geom_rect() +
coord_polar(theta = "y",start=-pi/2) + xlim(c(0, 2)) + ylim(c(0,2))
us %>%
filter(str_detect(administrative_area_level_2, "Mississippi")) %>%
ungroup() %>%
summarise(tests = sum(tests),
pos = sum(confirmed),
neg = tests - pos,
p.pos = pos/tests,
p.neg = neg/tests)
us %>%
filter(str_detect(administrative_area_level_2, "Florida")) %>%
ungroup() %>%
summarise(tests = sum(tests),
pos = sum(confirmed),
neg = tests - pos,
p.pos = pos/tests,
p.neg = neg/tests) %>%
pivot_longer(cols = c(p.pos, p.neg)) %>%
ggplot(aes(fill = name, ymax = 1, ymin = 0, xmax = 2, xmin = 1)) +
geom_rect() +
coord_polar(theta = "y",start=-pi/2) + xlim(c(0, 2)) + ylim(c(0,2))
us %>%
filter(str_detect(administrative_area_level_2, "Florida")) %>%
ungroup() %>%
summarise(tests = sum(tests),
pos = sum(confirmed),
neg = tests - pos,
p.pos = pos/tests,
p.neg = neg/tests)
us %>%
filter(str_detect(administrative_area_level_2, "Florida")) %>%
ungroup() %>%
summarise(tests = sum(tests),
pos = sum(confirmed),
neg = tests - pos,
p.pos = (pos/tests)*100,
p.neg = (neg/tests)*100) %>%
pivot_longer(cols = c(p.pos, p.neg)) %>%
ggplot(aes(fill = name, ymax = 1, ymin = 0, xmax = 2, xmin = 1)) +
geom_rect() +
coord_polar(theta = "y",start=-pi/2) + xlim(c(0, 2)) + ylim(c(0,2))
us %>%
filter(str_detect(administrative_area_level_2, "Florida")) %>%
ungroup() %>%
summarise(tests = sum(tests),
pos = sum(confirmed),
neg = tests - pos,
p.pos = (pos/tests)*100,
p.neg = (neg/tests)*100) %>%
pivot_longer(cols = c(p.pos, p.neg)) %>%
ggplot(aes(fill = name, ymax = 100, ymin = 0, xmax = 2, xmin = 1)) +
geom_rect() +
coord_polar(theta = "y",start=-pi/2) + xlim(c(0, 2)) + ylim(c(0,2))
us %>%
filter(str_detect(administrative_area_level_2, "California")) %>%
ungroup() %>%
summarise(tests = sum(tests),
pos = sum(confirmed),
neg = tests - pos,
p.pos = (pos/tests),
p.neg = (neg/tests)) %>%
pivot_longer(cols = c(p.pos, p.neg)) %>%
ggplot(aes(fill = name, ymax = 1, ymin = 0, xmax = 2, xmin = 1)) +
geom_rect() +
coord_polar(theta = "y",start=-pi/2) + xlim(c(0, 2)) + ylim(c(0,2))
us %>%
filter(str_detect(administrative_area_level_2, "California")) %>%
ungroup() %>%
summarise(tests = sum(tests),
pos = sum(confirmed),
neg = tests - pos,
p.pos = (pos/tests),
p.neg = (neg/tests))
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
urbnmapr::counties %>%
filter(state_name ==  "Mississippi") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(ms, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_deaths)) +
geom_polygon(color = "white") +
coord_map() +
#scale_fill_distiller(name="Total Deaths", palette = "Reds", trans= "reverse") +
scale_color_gradient(low = "#ECEFF4", high = "#BF616A")
mapr.ms <- urbnmapr::counties %>%
filter(state_name ==  "Mississippi") %>%
distinct(county_name, .keep_all = TRUE) %>%
mutate(county_name = str_remove_all(county_name, " County"))
urbnmapr::counties %>%
filter(state_name ==  "Mississippi") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(mapr.ms, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_deaths)) +
geom_polygon(color = "white") +
coord_map() +
#scale_fill_distiller(name="Total Deaths", palette = "Reds", trans= "reverse") +
scale_color_gradient(low = "#ECEFF4", high = "#BF616A")
urbnmapr::counties %>%
filter(state_name ==  "Mississippi") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(mapr.ms, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_deaths)) +
geom_polygon(color = "white") +
coord_map() +
#scale_fill_distiller(name="Total Deaths", palette = "Reds", trans= "reverse") +
scale_color_gradient(low = "#ECEFF4", high = "#BF616A")+
theme_void()
urbnmapr::counties %>%
filter(state_name ==  "Mississippi") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(mapr.ms, by = "county_name")
mapr.ms
urbnmapr::counties %>%
filter(state_name ==  "Mississippi") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(mapr.ms, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_deaths)) +
geom_polygon(color = "white") +
coord_map()
hi <- counties %>%
filter(str_detect(administrative_area_level_2, "Hawaii")) %>%
arrange(administrative_area_level_3) %>%
rename(county_name = administrative_area_level_3) %>%
select(county_name, date, tests, confirmed, deaths, recovered) %>%
group_by(county_name) %>%
summarise(total_confirmed = sum(confirmed, na.rm = TRUE),
total_deaths = sum(deaths, na.rm = TRUE),
total_tests = sum(tests, na.rm = TRUE),
total_recovered = sum(recovered, na.rm = TRUE))
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
scale_fill_distiller(name="Confirmed Cases", palette = "Greens", trans= "reverse") +
coord_map() +
theme_void()
counties <- covid19(country = "US", level = 3, raw = TRUE)
hi <- counties %>%
filter(str_detect(administrative_area_level_2, "Hawaii")) %>%
arrange(administrative_area_level_3) %>%
rename(county_name = administrative_area_level_3) %>%
select(county_name, date, tests, confirmed, deaths, recovered) %>%
group_by(county_name) %>%
summarise(total_confirmed = sum(confirmed, na.rm = TRUE),
total_deaths = sum(deaths, na.rm = TRUE),
total_tests = sum(tests, na.rm = TRUE),
total_recovered = sum(recovered, na.rm = TRUE))
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
scale_fill_distiller(name="Confirmed Cases", palette = "Greens", trans= "reverse") +
coord_map() +
theme_void()
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
scale_color_gradient(low = "#ECEFF4", high = "#BF616A")+
#scale_fill_distiller(name="Confirmed Cases", palette = "Greens", trans= "reverse") +
coord_map() +
theme_void()
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
scale_color_gradient(low = "#ECEFF4", high = "#BF616A")+
#scale_fill_distiller(name="Confirmed Cases", palette = "Greens", trans= "reverse") +
coord_map() +
theme_void()
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
scale_color_gradient(low = "#ECEFF4", high = "#D08770")+
#scale_fill_distiller(name="Confirmed Cases", palette = "Greens", trans= "reverse") +
coord_map() +
theme_void()
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
scale_color_gradient(low = "#D08770", high = "#D08770")+
#scale_fill_distiller(name="Confirmed Cases", palette = "Greens", trans= "reverse") +
coord_map() +
theme_void()
colfunc <- colorRampPalette(c("#BF616A", "white"))
colfunc(10)
plot(rep(1,10),col=colfunc(10),pch=19,cex=3)
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
#scale_color_gradient(low = "#D08770", high = "#D08770")+
scale_fill_distiller(name="Confirmed Cases", palette = colfunc, trans= "reverse") +
coord_map() +
theme_void()
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
#scale_color_gradient(low = "#D08770", high = "#D08770")+
scale_fill_distiller(name="Confirmed Cases", palette = "colfunc", trans= "reverse") +
coord_map() +
theme_void()
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
scale_fill_gradient(low = "#D08770", high = "#D08770")+
#scale_fill_distiller(name="Confirmed Cases", palette = "", trans= "reverse") +
coord_map() +
theme_void()
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
scale_fill_gradient(low = "#ECEFF4", high = "#D08770")+
#scale_fill_distiller(name="Confirmed Cases", palette = "", trans= "reverse") +
coord_map() +
theme_void()
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
ST <- us %>%
distinct(administrative_area_level_2) %>%
arrange(administrative_area_level_2)
ST
ST$administrative_area_level_2
urbnmapr::counties %>%
filter(state_name ==  "District of Columbia")
territories <- c("Guam", "American Samoa", "Northern Mariana Islands", "Virgin Islands", "Puerto Rico")
us %>%
ungroup() %>%
filter(!grepl(paste(territories, collapse="|"), administrative_area_level_2))
us %>%
ungroup() %>%
filter(!grepl(paste(territories, collapse="|"), administrative_area_level_2)) %>%
distinct(administrative_area_level_2) %>%
arrange(administrative_area_level_2) %>%
pull()
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
us %>%
ungroup() %>%
summarise(sum(confirmed, na.rm = TRUE))
us %>%
ungroup() %>%
summarise(sum(confirmed, na.rm = TRUE)) %>%
pull() %>%
prettyNum(big.mark = ",")
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
library(rsconnect)
deployApp()
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
shiny::runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
rsconnect::appDependencies()
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
library(dplyr)
us
library(COVID19)
us <- covid19(country = "US", level = 2, raw = TRUE)
territories <- c("Guam", "American Samoa", "Northern Mariana Islands", "Virgin Islands", "Puerto Rico")
us %>%
ungroup() %>%
filter(!grepl(paste(territories, collapse="|"), administrative_area_level_2)) %>%
distinct(administrative_area_level_2) %>%
arrange(administrative_area_level_2) %>%
pull()
