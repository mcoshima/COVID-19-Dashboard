pivot_longer(cols = c(p.pos, p.neg)) %>%
ggplot(aes(fill = name, ymax = 1, ymin = 0, xmax = 2, xmin = 1)) +
geom_rect() +
coord_polar(theta = "y",start=-pi/2) + xlim(c(0, 2)) + ylim(c(0,2))
us %>%
filter(str_detect(administrative_area_level_2, "Florida")) %>%
ungroup() %>%
summarise(tests = sum(tests),
pos = sum(confirmed),
neg = tests - pos,
p.pos = pos/tests,
p.neg = neg/tests)
us %>%
filter(str_detect(administrative_area_level_2, "Florida")) %>%
ungroup() %>%
summarise(tests = sum(tests),
pos = sum(confirmed),
neg = tests - pos,
p.pos = (pos/tests)*100,
p.neg = (neg/tests)*100) %>%
pivot_longer(cols = c(p.pos, p.neg)) %>%
ggplot(aes(fill = name, ymax = 1, ymin = 0, xmax = 2, xmin = 1)) +
geom_rect() +
coord_polar(theta = "y",start=-pi/2) + xlim(c(0, 2)) + ylim(c(0,2))
us %>%
filter(str_detect(administrative_area_level_2, "Florida")) %>%
ungroup() %>%
summarise(tests = sum(tests),
pos = sum(confirmed),
neg = tests - pos,
p.pos = (pos/tests)*100,
p.neg = (neg/tests)*100) %>%
pivot_longer(cols = c(p.pos, p.neg)) %>%
ggplot(aes(fill = name, ymax = 100, ymin = 0, xmax = 2, xmin = 1)) +
geom_rect() +
coord_polar(theta = "y",start=-pi/2) + xlim(c(0, 2)) + ylim(c(0,2))
us %>%
filter(str_detect(administrative_area_level_2, "California")) %>%
ungroup() %>%
summarise(tests = sum(tests),
pos = sum(confirmed),
neg = tests - pos,
p.pos = (pos/tests),
p.neg = (neg/tests)) %>%
pivot_longer(cols = c(p.pos, p.neg)) %>%
ggplot(aes(fill = name, ymax = 1, ymin = 0, xmax = 2, xmin = 1)) +
geom_rect() +
coord_polar(theta = "y",start=-pi/2) + xlim(c(0, 2)) + ylim(c(0,2))
us %>%
filter(str_detect(administrative_area_level_2, "California")) %>%
ungroup() %>%
summarise(tests = sum(tests),
pos = sum(confirmed),
neg = tests - pos,
p.pos = (pos/tests),
p.neg = (neg/tests))
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
urbnmapr::counties %>%
filter(state_name ==  "Mississippi") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(ms, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_deaths)) +
geom_polygon(color = "white") +
coord_map() +
#scale_fill_distiller(name="Total Deaths", palette = "Reds", trans= "reverse") +
scale_color_gradient(low = "#ECEFF4", high = "#BF616A")
mapr.ms <- urbnmapr::counties %>%
filter(state_name ==  "Mississippi") %>%
distinct(county_name, .keep_all = TRUE) %>%
mutate(county_name = str_remove_all(county_name, " County"))
urbnmapr::counties %>%
filter(state_name ==  "Mississippi") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(mapr.ms, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_deaths)) +
geom_polygon(color = "white") +
coord_map() +
#scale_fill_distiller(name="Total Deaths", palette = "Reds", trans= "reverse") +
scale_color_gradient(low = "#ECEFF4", high = "#BF616A")
urbnmapr::counties %>%
filter(state_name ==  "Mississippi") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(mapr.ms, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_deaths)) +
geom_polygon(color = "white") +
coord_map() +
#scale_fill_distiller(name="Total Deaths", palette = "Reds", trans= "reverse") +
scale_color_gradient(low = "#ECEFF4", high = "#BF616A")+
theme_void()
urbnmapr::counties %>%
filter(state_name ==  "Mississippi") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(mapr.ms, by = "county_name")
mapr.ms
urbnmapr::counties %>%
filter(state_name ==  "Mississippi") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(mapr.ms, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_deaths)) +
geom_polygon(color = "white") +
coord_map()
hi <- counties %>%
filter(str_detect(administrative_area_level_2, "Hawaii")) %>%
arrange(administrative_area_level_3) %>%
rename(county_name = administrative_area_level_3) %>%
select(county_name, date, tests, confirmed, deaths, recovered) %>%
group_by(county_name) %>%
summarise(total_confirmed = sum(confirmed, na.rm = TRUE),
total_deaths = sum(deaths, na.rm = TRUE),
total_tests = sum(tests, na.rm = TRUE),
total_recovered = sum(recovered, na.rm = TRUE))
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
scale_fill_distiller(name="Confirmed Cases", palette = "Greens", trans= "reverse") +
coord_map() +
theme_void()
counties <- covid19(country = "US", level = 3, raw = TRUE)
hi <- counties %>%
filter(str_detect(administrative_area_level_2, "Hawaii")) %>%
arrange(administrative_area_level_3) %>%
rename(county_name = administrative_area_level_3) %>%
select(county_name, date, tests, confirmed, deaths, recovered) %>%
group_by(county_name) %>%
summarise(total_confirmed = sum(confirmed, na.rm = TRUE),
total_deaths = sum(deaths, na.rm = TRUE),
total_tests = sum(tests, na.rm = TRUE),
total_recovered = sum(recovered, na.rm = TRUE))
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
scale_fill_distiller(name="Confirmed Cases", palette = "Greens", trans= "reverse") +
coord_map() +
theme_void()
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
scale_color_gradient(low = "#ECEFF4", high = "#BF616A")+
#scale_fill_distiller(name="Confirmed Cases", palette = "Greens", trans= "reverse") +
coord_map() +
theme_void()
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
scale_color_gradient(low = "#ECEFF4", high = "#BF616A")+
#scale_fill_distiller(name="Confirmed Cases", palette = "Greens", trans= "reverse") +
coord_map() +
theme_void()
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
scale_color_gradient(low = "#ECEFF4", high = "#D08770")+
#scale_fill_distiller(name="Confirmed Cases", palette = "Greens", trans= "reverse") +
coord_map() +
theme_void()
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
scale_color_gradient(low = "#D08770", high = "#D08770")+
#scale_fill_distiller(name="Confirmed Cases", palette = "Greens", trans= "reverse") +
coord_map() +
theme_void()
colfunc <- colorRampPalette(c("#BF616A", "white"))
colfunc(10)
plot(rep(1,10),col=colfunc(10),pch=19,cex=3)
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
#scale_color_gradient(low = "#D08770", high = "#D08770")+
scale_fill_distiller(name="Confirmed Cases", palette = colfunc, trans= "reverse") +
coord_map() +
theme_void()
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
#scale_color_gradient(low = "#D08770", high = "#D08770")+
scale_fill_distiller(name="Confirmed Cases", palette = "colfunc", trans= "reverse") +
coord_map() +
theme_void()
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
scale_fill_gradient(low = "#D08770", high = "#D08770")+
#scale_fill_distiller(name="Confirmed Cases", palette = "", trans= "reverse") +
coord_map() +
theme_void()
urbnmapr::counties %>%
filter(state_name ==  "Hawaii") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(hi, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_confirmed)) +
geom_polygon(color = "white") +
scale_fill_gradient(low = "#ECEFF4", high = "#D08770")+
#scale_fill_distiller(name="Confirmed Cases", palette = "", trans= "reverse") +
coord_map() +
theme_void()
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
ST <- us %>%
distinct(administrative_area_level_2) %>%
arrange(administrative_area_level_2)
ST
ST$administrative_area_level_2
urbnmapr::counties %>%
filter(state_name ==  "District of Columbia")
territories <- c("Guam", "American Samoa", "Northern Mariana Islands", "Virgin Islands", "Puerto Rico")
us %>%
ungroup() %>%
filter(!grepl(paste(territories, collapse="|"), administrative_area_level_2))
us %>%
ungroup() %>%
filter(!grepl(paste(territories, collapse="|"), administrative_area_level_2)) %>%
distinct(administrative_area_level_2) %>%
arrange(administrative_area_level_2) %>%
pull()
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
us %>%
ungroup() %>%
summarise(sum(confirmed, na.rm = TRUE))
us %>%
ungroup() %>%
summarise(sum(confirmed, na.rm = TRUE)) %>%
pull() %>%
prettyNum(big.mark = ",")
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
library(rsconnect)
deployApp()
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
shiny::runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
rsconnect::appDependencies()
runApp('C:/Users/w986430/Desktop/COVID-Dash/Covid19Dash')
library(dplyr)
us
library(COVID19)
us <- covid19(country = "US", level = 2, raw = TRUE)
territories <- c("Guam", "American Samoa", "Northern Mariana Islands", "Virgin Islands", "Puerto Rico")
us %>%
ungroup() %>%
filter(!grepl(paste(territories, collapse="|"), administrative_area_level_2)) %>%
distinct(administrative_area_level_2) %>%
arrange(administrative_area_level_2) %>%
pull()
library(COVID19)
us <- covid19(country = "US", level = 2, raw = TRUE)
territories <- c("Guam", "American Samoa", "Northern Mariana Islands", "Virgin Islands", "Puerto Rico")
ST <- us %>%
ungroup() %>%
filter(!grepl(paste(territories, collapse="|"), administrative_area_level_2)) %>%
distinct(administrative_area_level_2) %>%
arrange(administrative_area_level_2) %>%
pull()
#devtools::install_github("nik01010/dashboardthemes")
library(dplyr)
ST <- us %>%
ungroup() %>%
filter(!grepl(paste(territories, collapse="|"), administrative_area_level_2)) %>%
distinct(administrative_area_level_2) %>%
arrange(administrative_area_level_2) %>%
pull()
ST
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
summarise(sum(confirmed, na.rm = TRUE)) %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
pull() %>%
prettyNum(big.mark = ",")
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
summarise(sum(confirmed, na.rm = TRUE)) %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
pull() %>%
prettyNum(big.mark = ",")
library(stringr)
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
summarise(sum(confirmed, na.rm = TRUE)) %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
pull() %>%
prettyNum(big.mark = ",")
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
summarise(sum(confirmed, na.rm = TRUE)) %>%
filter(str_detect(administrative_area_level_2, "South Carolina"))
us %>%
ungroup() %>%
group_by(administrative_area_level_2)
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
tail(-2)
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
tail()
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
tail(1)
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
tail(1) %>%
select(confirmed) %>%
prettyNum(big.mark = ",")
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
tail(1) %>%
select(confirmed) %>%
pull() %>%
prettyNum(big.mark = ",")
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
tail(1) %>%
select(confirmed) %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
pull() %>%
prettyNum(big.mark = ",")
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
tail(1) %>%
select(confirmed) %>%
pull() %>%
prettyNum(big.mark = ",")
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
tail(1)
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
slice(1)
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
slice(-1)
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
slice(n())
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
slice(n()) %>%
summarise(sum(confirmed, na.rm = TRUE)) %>%
pull() %>%
prettyNum(big.mark = ",")
us %>%
ungroup() %>%
group_by(administrative_area_level_2) %>%
slice(n()) %>%
ungroup() %>%
summarise(sum(confirmed, na.rm = TRUE)) %>%
pull() %>%
prettyNum(big.mark = ",")
counties %>%
ungroup() %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
arrange(administrative_area_level_3) %>%
rename(county_name = administrative_area_level_3) %>%
select(county_name, date, tests, confirmed, deaths, recovered)
counties <- covid19(country = "US", level = 3, raw = TRUE)
counties %>%
ungroup() %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
arrange(administrative_area_level_3) %>%
rename(county_name = administrative_area_level_3) %>%
select(county_name, date, tests, confirmed, deaths, recovered)
counties %>%
ungroup() %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
arrange(administrative_area_level_3) %>%
rename(county_name = administrative_area_level_3) %>%
select(county_name, date, tests, confirmed, deaths, recovered) %>%
group_by(county_name) %>%
slice(n())
counties %>%
ungroup() %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
arrange(administrative_area_level_3) %>%
rename(county_name = administrative_area_level_3) %>%
select(county_name, date, tests, confirmed, deaths, recovered) %>%
summarise(Cases = sum(confirmed, na.rm = TRUE),
total_deaths = sum(deaths, na.rm = TRUE),
total_tests = sum(tests, na.rm = TRUE),
total_recovered = sum(recovered, na.rm = TRUE))
counties %>%
ungroup() %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
arrange(administrative_area_level_3) %>%
rename(county_name = administrative_area_level_3) %>%
select(county_name, date, tests, confirmed, deaths, recovered) %>%
summarise(Cases = sum(confirmed, na.rm = TRUE),
total_deaths = sum(deaths, na.rm = TRUE),
total_tests = sum(tests, na.rm = TRUE),
total_recovered = sum(recovered, na.rm = TRUE))
counties %>%
ungroup() %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
arrange(administrative_area_level_3) %>%
rename(county_name = administrative_area_level_3) %>%
select(county_name, date, tests, confirmed, deaths, recovered) %>%
group_by(county_name) %>%
slice(n()) %>%
summarise(Cases = sum(confirmed, na.rm = TRUE),
total_deaths = sum(deaths, na.rm = TRUE),
total_tests = sum(tests, na.rm = TRUE),
total_recovered = sum(recovered, na.rm = TRUE))
counties %>%
ungroup() %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
arrange(administrative_area_level_3) %>%
rename(county_name = administrative_area_level_3) %>%
select(county_name, date, tests, confirmed, deaths, recovered) %>%
group_by(county_name) %>%
slice(n()) %>%
ungroup() %>%
summarise(Cases = sum(confirmed, na.rm = TRUE),
total_deaths = sum(deaths, na.rm = TRUE),
total_tests = sum(tests, na.rm = TRUE),
total_recovered = sum(recovered, na.rm = TRUE))
counties %>%
ungroup() %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
arrange(administrative_area_level_3) %>%
rename(county_name = administrative_area_level_3) %>%
select(county_name, date, tests, confirmed, deaths, recovered) %>%
group_by(county_name) %>%
slice(n())
st <- counties %>%
ungroup() %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
arrange(administrative_area_level_3) %>%
rename(county_name = administrative_area_level_3) %>%
select(county_name, date, tests, confirmed, deaths, recovered) %>%
group_by(county_name) %>%
slice(n())
urbnmapr::counties %>%
filter(state_name ==  "South Carolina") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(st, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = Cases)) +
geom_polygon(color = "white") +
coord_map() +
scale_fill_gradient(low = "#ECEFF4", high = "#A3BE8C")+
theme_void()
library(urbnmapr)
install.packages("urbnmapr")
urbnmapr::counties %>%
filter(state_name ==  "South Carolina") %>%
mutate(county_name = str_remove_all(county_name, " County")) %>%
left_join(st, by = "county_name") %>%
ggplot(mapping = aes(long, lat, group = group, fill = Cases)) +
geom_polygon(color = "white") +
coord_map() +
scale_fill_gradient(low = "#ECEFF4", high = "#A3BE8C")+
theme_void()
st <- counties %>%
ungroup() %>%
filter(str_detect(administrative_area_level_2, "South Carolina")) %>%
arrange(administrative_area_level_3) %>%
rename(county_name = administrative_area_level_3) %>%
select(county_name, date, tests, confirmed, deaths, recovered) %>%
group_by(county_name) %>%
slice(n())  %>%
rename(Cases = "confirmed")
st
